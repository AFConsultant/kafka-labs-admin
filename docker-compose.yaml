services:
  volume-init:
    image: busybox
    command: |
      chown -R 1000:1000 /opt/kafka/data901 && \
      chown -R 1000:1000 /opt/kafka/data902 && \
      chown -R 1000:1000 /opt/kafka/data903 && \
      chown -R 1000:1000 /opt/kafka/data101 && \
      chown -R 1000:1000 /opt/kafka/data102 && \
      chown -R 1000:1000 /opt/kafka/data103 && \
      chown -R 1000:1000 /opt/kafka/data104
    volumes:
      - data-controller-901:/opt/kafka/data901
      - data-controller-902:/opt/kafka/data902
      - data-controller-903:/opt/kafka/data903
      - data-broker-101:/opt/kafka/data101
      - data-broker-102:/opt/kafka/data102
      - data-broker-103:/opt/kafka/data103
      - data-broker-104:/opt/kafka/data104
    restart: "no"
    
  kafka-901:
    image: apache/kafka:${KAFKA_901_VERSION}
    container_name: kafka-901
    environment:
      KAFKA_NODE_ID: 901
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://kafka-901:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:SASL_SSL
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_OPTS: "-javaagent:/opt/kafka/config/monitoring/jmx_prometheus_javaagent-1.3.0.jar=/opt/kafka/config/monitoring/config_kafka901.yml"
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username="controller_user" password="controller_secret" user_controller_user="controller_secret" user_broker_user="broker_secret";
      KAFKA_SSL_KEYSTORE_LOCATION: /opt/kafka/security/kafka-901.keystore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /opt/kafka/security/kafka-901.truststore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: kafka-labs
      KAFKA_SSL_KEY_PASSWORD: kafka-labs
      KAFKA_SSL_TRUSTSTORE_PASSWORD: kafka-labs
      KAFKA_CONTROLLER_QUORUM_VOTERS: 901@kafka-901:9093,902@kafka-902:9093,903@kafka-903:9093
      KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "${KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND}"
      KAFKA_SUPER_USERS: User:controller_user;User:broker_user;User:admin
      KAFKA_LOG_DIRS: /opt/kafka/data
    volumes:
      - data-controller-901:/opt/kafka/data
      - ./security/data/kafka-901-creds:/opt/kafka/security:ro
      - ./etc/jmx:/opt/kafka/config/monitoring:ro
    healthcheck:
      test: nc -z kafka-901 9093
      interval: 2s
      timeout: 10s
      retries: 10
      start_period: 5s
    depends_on:
      - volume-init

  kafka-902:
    image: apache/kafka:${KAFKA_902_VERSION}
    container_name: kafka-902
    environment:
      KAFKA_NODE_ID: 902
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://kafka-902:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:SASL_SSL
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_OPTS: "-javaagent:/opt/kafka/config/monitoring/jmx_prometheus_javaagent-1.3.0.jar=/opt/kafka/config/monitoring/config_kafka902.yml"
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username="controller_user" password="controller_secret" user_controller_user="controller_secret" user_broker_user="broker_secret";
      KAFKA_SSL_KEYSTORE_LOCATION: /opt/kafka/security/kafka-902.keystore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /opt/kafka/security/kafka-902.truststore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: kafka-labs
      KAFKA_SSL_KEY_PASSWORD: kafka-labs
      KAFKA_SSL_TRUSTSTORE_PASSWORD: kafka-labs
      KAFKA_CONTROLLER_QUORUM_VOTERS: 901@kafka-901:9093,902@kafka-902:9093,903@kafka-903:9093
      KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "${KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND}"
      KAFKA_SUPER_USERS: User:controller_user;User:broker_user;User:admin
      KAFKA_LOG_DIRS: /opt/kafka/data
    volumes:
      - data-controller-902:/opt/kafka/data
      - ./security/data/kafka-902-creds:/opt/kafka/security:ro
      - ./etc/jmx:/opt/kafka/config/monitoring:ro
    healthcheck:
      test: nc -z kafka-902 9093
      interval: 2s
      timeout: 10s
      retries: 10
      start_period: 5s
    depends_on:
      - volume-init

  kafka-903:
    image: apache/kafka:${KAFKA_903_VERSION}
    container_name: kafka-903
    environment:
      KAFKA_NODE_ID: 903
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://kafka-903:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:SASL_SSL
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_OPTS: "-javaagent:/opt/kafka/config/monitoring/jmx_prometheus_javaagent-1.3.0.jar=/opt/kafka/config/monitoring/config_kafka903.yml"
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username="controller_user" password="controller_secret" user_controller_user="controller_secret" user_broker_user="broker_secret";
      KAFKA_SSL_KEYSTORE_LOCATION: /opt/kafka/security/kafka-903.keystore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /opt/kafka/security/kafka-903.truststore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: kafka-labs
      KAFKA_SSL_KEY_PASSWORD: kafka-labs
      KAFKA_SSL_TRUSTSTORE_PASSWORD: kafka-labs
      KAFKA_CONTROLLER_QUORUM_VOTERS: 901@kafka-901:9093,902@kafka-902:9093,903@kafka-903:9093
      KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "${KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND}"
      KAFKA_SUPER_USERS: User:controller_user;User:broker_user;User:admin
      KAFKA_LOG_DIRS: /opt/kafka/data
    volumes:
      - data-controller-903:/opt/kafka/data
      - ./security/data/kafka-903-creds:/opt/kafka/security:ro
      - ./etc/jmx:/opt/kafka/config/monitoring:ro
    healthcheck:
      test: nc -z kafka-903 9093
      interval: 2s
      timeout: 10s
      retries: 10
      start_period: 5s
    depends_on:
      - volume-init

  kafka-101:
    image: apache/kafka:${KAFKA_101_VERSION}
    container_name: kafka-101
    ports:
      - "9196:9196"
      - "9999:9999"
    environment:
      KAFKA_NODE_ID: 101
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: PLAINTEXT://kafka-101:9092,REPLICATION://kafka-101:9093,INTERNAL://kafka-101:9094,EXTERNAL://kafka-101:9095,HOST://kafka-101:9196
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-101:9092,REPLICATION://kafka-101:9093,INTERNAL://kafka-101:9094,EXTERNAL://kafka-101:9095,HOST://kafka-101:9196
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:SASL_SSL,REPLICATION:SASL_SSL,INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_SSL,PLAINTEXT:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,SCRAM-SHA-512
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_OPTS: "-javaagent:/opt/kafka/config/monitoring/jmx_prometheus_javaagent-1.3.0.jar=/opt/kafka/config/monitoring/config_kafka101.yml -Djava.security.auth.login.config=/opt/kafka/config/jaas/broker.conf"
      KAFKA_SSL_KEYSTORE_LOCATION: /opt/kafka/security/kafka-101.keystore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /opt/kafka/security/kafka-101.truststore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: kafka-labs
      KAFKA_SSL_KEY_PASSWORD: kafka-labs
      KAFKA_SSL_TRUSTSTORE_PASSWORD: kafka-labs
      KAFKA_CONTROLLER_QUORUM_VOTERS: 901@kafka-901:9093,902@kafka-902:9093,903@kafka-903:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION
      KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "${KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND}"
      KAFKA_SUPER_USERS: User:controller_user;User:broker_user;User:admin
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG_DIRS: /opt/kafka/data
      OTEL_EXPORTER_COL_ENDPOINT: "otel-collector:4317"
      KAFKA_METRIC_REPORTERS: com.afconsultant.kafkaadminlabs.ClientOtlpMetricsReporter
    volumes:
      - data-broker-101:/opt/kafka/data
      - ./security/data/kafka-101-creds:/opt/kafka/security:ro
      - ./security/clients:/opt/kafka/clients:ro
      - ./security/jaas/broker.conf:/opt/kafka/config/jaas/broker.conf:ro
      - ./etc/jmx:/opt/kafka/config/monitoring:ro
      - ./etc/broker/libs/metrics-reporter.jar:/opt/kafka/libs/metrics-reporter.jar:ro
    healthcheck:
      test: nc -z kafka-101 9092
      interval: 2s
      timeout: 10s
      retries: 10
      start_period: 5s
    depends_on:
      kafka-901:
        condition: service_healthy
      kafka-902:
        condition: service_healthy
      kafka-903:
        condition: service_healthy
      volume-init:
        condition: service_started

  kafka-102:
    image: apache/kafka:${KAFKA_102_VERSION}
    container_name: kafka-102
    ports:
      - "9296:9296"
    environment:
      KAFKA_NODE_ID: 102
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: PLAINTEXT://kafka-102:9092,REPLICATION://kafka-102:9093,INTERNAL://kafka-102:9094,EXTERNAL://kafka-102:9095,HOST://kafka-102:9296
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-102:9092,REPLICATION://kafka-102:9093,INTERNAL://kafka-102:9094,EXTERNAL://kafka-102:9095,HOST://kafka-102:9296
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:SASL_SSL,REPLICATION:SASL_SSL,INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_SSL,PLAINTEXT:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,SCRAM-SHA-512
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_OPTS: "-javaagent:/opt/kafka/config/monitoring/jmx_prometheus_javaagent-1.3.0.jar=/opt/kafka/config/monitoring/config_kafka102.yml -Djava.security.auth.login.config=/opt/kafka/config/jaas/broker.conf"
      KAFKA_SSL_KEYSTORE_LOCATION: /opt/kafka/security/kafka-102.keystore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /opt/kafka/security/kafka-102.truststore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: kafka-labs
      KAFKA_SSL_KEY_PASSWORD: kafka-labs
      KAFKA_SSL_TRUSTSTORE_PASSWORD: kafka-labs
      KAFKA_CONTROLLER_QUORUM_VOTERS: 901@kafka-901:9093,902@kafka-902:9093,903@kafka-903:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION
      KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "${KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND}"
      KAFKA_SUPER_USERS: User:controller_user;User:broker_user;User:admin
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG_DIRS: /opt/kafka/data
      OTEL_EXPORTER_COL_ENDPOINT: "otel-collector:4317"
      KAFKA_METRIC_REPORTERS: com.afconsultant.kafkaadminlabs.ClientOtlpMetricsReporter
    volumes:
      - data-broker-102:/opt/kafka/data
      - ./security/data/kafka-102-creds:/opt/kafka/security:ro
      - ./security/clients:/opt/kafka/clients:ro
      - ./security/jaas/broker.conf:/opt/kafka/config/jaas/broker.conf:ro
      - ./etc/jmx:/opt/kafka/config/monitoring:ro
      - ./etc/broker/libs/metrics-reporter.jar:/opt/kafka/libs/metrics-reporter.jar:ro
    healthcheck:
      test: nc -z kafka-102 9092
      interval: 2s
      timeout: 10s
      retries: 10
      start_period: 5s
    depends_on:
      kafka-901:
        condition: service_healthy
      kafka-902:
        condition: service_healthy
      kafka-903:
        condition: service_healthy
      volume-init:
        condition: service_started

  kafka-103:
    image: apache/kafka:${KAFKA_102_VERSION}
    container_name: kafka-103
    ports:
      - "9396:9396"
    environment:
      KAFKA_NODE_ID: 103
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: PLAINTEXT://kafka-103:9092,REPLICATION://kafka-103:9093,INTERNAL://kafka-103:9094,EXTERNAL://kafka-103:9095,HOST://kafka-103:9396
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-103:9092,REPLICATION://kafka-103:9093,INTERNAL://kafka-103:9094,EXTERNAL://kafka-103:9095,HOST://kafka-103:9396
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:SASL_SSL,REPLICATION:SASL_SSL,INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_SSL,PLAINTEXT:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,SCRAM-SHA-512
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_OPTS: "-javaagent:/opt/kafka/config/monitoring/jmx_prometheus_javaagent-1.3.0.jar=/opt/kafka/config/monitoring/config_kafka103.yml -Djava.security.auth.login.config=/opt/kafka/config/jaas/broker.conf"
      KAFKA_SSL_KEYSTORE_LOCATION: /opt/kafka/security/kafka-103.keystore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /opt/kafka/security/kafka-103.truststore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: kafka-labs
      KAFKA_SSL_KEY_PASSWORD: kafka-labs
      KAFKA_SSL_TRUSTSTORE_PASSWORD: kafka-labs
      KAFKA_CONTROLLER_QUORUM_VOTERS: 901@kafka-901:9093,902@kafka-902:9093,903@kafka-903:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION
      KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "${KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND}"
      KAFKA_SUPER_USERS: User:controller_user;User:broker_user;User:admin
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG_DIRS: /opt/kafka/data
      OTEL_EXPORTER_COL_ENDPOINT: "otel-collector:4317"
      KAFKA_METRIC_REPORTERS: com.afconsultant.kafkaadminlabs.ClientOtlpMetricsReporter
    volumes:
      - data-broker-103:/opt/kafka/data
      - ./security/data/kafka-103-creds:/opt/kafka/security:ro
      - ./security/clients:/opt/kafka/clients:ro
      - ./security/jaas/broker.conf:/opt/kafka/config/jaas/broker.conf:ro
      - ./etc/jmx:/opt/kafka/config/monitoring:ro
      - ./etc/broker/libs/metrics-reporter.jar:/opt/kafka/libs/metrics-reporter.jar:ro
    healthcheck:
      test: nc -z kafka-103 9092
      interval: 2s
      timeout: 10s
      retries: 10
      start_period: 5s
    depends_on:
      kafka-901:
        condition: service_healthy
      kafka-902:
        condition: service_healthy
      kafka-903:
        condition: service_healthy
      volume-init:
        condition: service_started

  akhq:
    image: tchiotludo/akhq:${AKHQ_VERSION}
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka-101:9094,kafka-102:9094,kafka-103:9094"
                security.protocol: "SASL_PLAINTEXT"
                sasl.mechanism: "SCRAM-SHA-512"
                sasl.jaas.config: "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"admin-secret\";"
              schema-registry:
                url: "http://schema-registry:8081"
              connect:
                - name: connect
                  url: "http://connect:8083"
    ports:
      - 8085:8080
    restart: always
    depends_on:
      kafka-101:
        condition: service_healthy
      create-users:
        condition: service_started

  create-users:
    image: apache/kafka:${KAFKA_VERSION}
    container_name: create-users
    command: >
      bash -c 'echo Creating users... ;
      /opt/kafka/bin/kafka-configs.sh --bootstrap-server kafka-101:9092 --alter --add-config 'SCRAM-SHA-512=[iterations=8192,password=admin-secret]' --entity-type users --entity-name admin ;
      /opt/kafka/bin/kafka-configs.sh --bootstrap-server kafka-101:9092 --alter --add-config 'SCRAM-SHA-512=[iterations=8192,password=akhq-secret]' --entity-type users --entity-name akhq ;
      /opt/kafka/bin/kafka-configs.sh --bootstrap-server kafka-101:9092 --alter --add-config 'SCRAM-SHA-512=[iterations=8192,password=bob-secret]' --entity-type users --entity-name bob ;
      /opt/kafka/bin/kafka-configs.sh --bootstrap-server kafka-101:9092 --alter --add-config 'SCRAM-SHA-512=[iterations=8192,password=alice-secret]' --entity-type users --entity-name alice ;
      true'
    depends_on:
      kafka-101:
        condition: service_healthy

  create-topics:
    image: apache/kafka:${KAFKA_VERSION}
    container_name: create-topics
    command: >
      bash -c 'echo Creating topics... ;
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-101:9092,kafka-102:9092,kafka-103:9092 --create --topic bike_trips --partitions 3 --replication-factor 3 ;
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-101:9092,kafka-102:9092,kafka-103:9092 --create --topic station_infos_raw_csv --partitions 3 --replication-factor 3 --config cleanup.policy=compact ;
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-101:9092,kafka-102:9092,kafka-103:9092 --create --topic perf-test --partitions 6 --replication-factor 3 ;
      true'
    depends_on:
      kafka-101:
        condition: service_healthy

  create-acls:
    image: apache/kafka:${KAFKA_VERSION}
    container_name: create-acls
    command: >
      bash -c 'echo Creating ACLs... ;
      sleep 10 ; # wait for users to be created
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation Describe --cluster --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation DescribeConfigs --cluster --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation AlterConfigs --cluster --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation Describe --topic "'*'" --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation DescribeConfigs --topic "'*'" --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation AlterConfigs --topic "'*'" --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation Read --topic "'*'" --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation Create --topic "'*'" --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation Write --topic "'*'" --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation Delete --topic "'*'" --command-config /opt/kafka/clients/internal-admin.properties; 
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation Describe --group "'*'" --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation Read --group "'*'" --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation DescribeConfigs --group "'*'" --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation AlterConfigs --group "'*'" --command-config /opt/kafka/clients/internal-admin.properties;
      /opt/kafka/bin/kafka-acls.sh --bootstrap-server kafka-101:9094 --add --allow-principal User:akhq --operation Delete --group "'*'" --command-config /opt/kafka/clients/internal-admin.properties;
      true'
    volumes:
      - ./security/clients/internal-admin.properties:/opt/kafka/clients/internal-admin.properties:ro
    depends_on:
      create-users:
        condition: service_started

  grafana:
    image: "grafana/grafana:${GRAFANA_VERSION}"
    ports:
     - "3000:3000"
    environment:
      GF_PATHS_DATA : /var/lib/grafana
      GF_SECURITY_ADMIN_PASSWORD : kafka
    volumes:
     - ./etc/grafana/provisioning:/etc/grafana/provisioning:ro
     - ./etc/grafana/dashboards:/var/lib/grafana/dashboards:ro
    container_name: grafana
    depends_on:
     - prometheus

  prometheus:
    image: "prom/prometheus:${PROMETHEUS_VERSION}"
    ports:
     - "9090:9090"
    volumes:
     - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-otlp-receiver"
    container_name: prometheus

  producer-perf-test:
    image: apache/kafka:${KAFKA_VERSION}
    container_name: producer-perf-test
    command: >
      bash -c 'echo Launching producer performance test... ;
      sleep 20 ;
      /opt/kafka/bin/kafka-producer-perf-test.sh --topic perf-test --num-records 6000000 --record-size 100 --throughput 100 --producer-props bootstrap.servers=kafka-101:9092,kafka-102:9092,kafka-103:9092 client.id=producer-perf;
      true'
    depends_on:
      create-topics:
        condition: service_started

  consumer-perf-test:
    image: apache/kafka:${KAFKA_VERSION}
    container_name: consumer-perf-test
    command: >
      bash -c 'echo Launching consumer performance test... ;
      sleep 25 ;
      /opt/kafka/bin/kafka-consumer-perf-test.sh --topic perf-test --messages 6000000 --bootstrap-server kafka-101:9092,kafka-102:9092,kafka-103:9092 --group consumer-perf-test --timeout 100000000;
      true'
    depends_on:
      producer-perf-test:
        condition: service_started

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:${OTEL_COLLECTOR_CONTRIB_VERSION}
    volumes:
      - ./etc/otel/collector.yml:/etc/otelcol-contrib/config.yaml
    ports:
      - "4317:4317"
    depends_on:
      kafka-101:
        condition: service_healthy

volumes:
  data-controller-901:
  data-controller-902:
  data-controller-903:
  data-broker-101:
  data-broker-102:
  data-broker-103:
  data-broker-104: