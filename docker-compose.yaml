services:
  kafka-101:
    image: apache/kafka:${KAFKA_VERSION}
    container_name: kafka-101
    ports:
      - "9192:9092"
      - "9193:9093"
    environment:
      KAFKA_NODE_ID: 101
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka-101:9092,CONTROLLER://kafka-101:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-101:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 101@kafka-101:9093,102@kafka-102:9093,103@kafka-103:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    healthcheck:
      test: nc -z kafka-101 9092
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 2s

  kafka-102:
    image: apache/kafka:${KAFKA_VERSION}
    container_name: kafka-102
    ports:
      - "9292:9092"
      - "9293:9093"
    environment:
      KAFKA_NODE_ID: 102
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka-102:9092,CONTROLLER://kafka-102:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-102:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 101@kafka-101:9093,102@kafka-102:9093,103@kafka-103:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    healthcheck:
      test: nc -z kafka-102 9092
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 2s

  kafka-103:
    image: apache/kafka:${KAFKA_VERSION}
    container_name: kafka-103
    ports:
      - "9392:9092"
      - "9393:9093"
    environment:
      KAFKA_NODE_ID: 103
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka-103:9092,CONTROLLER://kafka-103:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-103:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 101@kafka-101:9093,102@kafka-102:9093,103@kafka-103:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    healthcheck:
      test: nc -z kafka-103 9092
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 2s

  akhq:
    image: tchiotludo/akhq:${AKHQ_VERSION}
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka-101:9092,kafka-102:9092,kafka-103:9092"
              schema-registry:
                url: "http://schema-registry:8081"
              connect:
                - name: connect
                  url: "http://connect:8083"
    ports:
      - 8085:8080
    depends_on:
      kafka-101:
        condition: service_healthy